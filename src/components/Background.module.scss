body {
  margin: 0;
  overflow: hidden;
}

.background {
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  overflow-y: auto;
}

$particleSize: 20vmin;
// $particleSize: 5vmin;
$animationDuration: 100s;
$amount: 20;
// $amount: 10;

.light {
  background: #c3e1ff;
  > span {
    width: $particleSize;
    height: $particleSize;
    border-radius: $particleSize;
    backface-visibility: hidden;
    position: fixed;
    animation-name: move;
    animation-duration: $animationDuration;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    $colors: (#a0bcf3, #b5b0ef, #ffffff);
    @for $i from 1 through $amount {
      &:nth-child(#{$i}) {
        color: nth($colors, random(length($colors)));
        // top: random(100) * 1%;
        // left: random(100) * 1%;
        top: random(50) * 1%;
        left: random(50) * 1%;
        animation-duration: (random($animationDuration * 10) / 10) * 1s + 10s;
        animation-delay: random(($animationDuration + 10s) * 10) / 10 * -1s;
        transform-origin: (random(50) - 25) * 1vw (random(50) - 25) * 1vh;
        $blurRadius: (random() + 0.5) * $particleSize * 0.5;
        $x: if(random() > 0.5, -1, 1);
        box-shadow: ($particleSize * 2 * $x) 0 $blurRadius currentColor;
      }
    }
  }
}

.dark {
  background: #171717fc;
  > span {
    width: $particleSize;
    height: $particleSize;
    border-radius: $particleSize;
    backface-visibility: hidden;
    position: fixed;
    animation-name: move;
    animation-duration: $animationDuration;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    $colors: (#003c5d, #372a00, #37214b);
    @for $i from 1 through $amount {
      &:nth-child(#{$i}) {
        color: nth($colors, random(length($colors)));
        // top: random(100) * 1%;
        // left: random(100) * 1%;
        top: random(50) * 1%;
        left: random(50) * 1%;
        animation-duration: (random($animationDuration * 10) / 10) * 1s + 10s;
        animation-delay: random(($animationDuration + 10s) * 10) / 10 * -1s;
        transform-origin: (random(50) - 25) * 1vw (random(50) - 25) * 1vh;
        $blurRadius: (random() + 0.5) * $particleSize * 0.5;
        $x: if(random() > 0.5, -1, 1);
        box-shadow: ($particleSize * 2 * $x) 0 $blurRadius currentColor;
      }
    }
  }
}

// .background {
//   > span {
//     width: $particleSize;
//     height: $particleSize;
//     border-radius: $particleSize;
//     backface-visibility: hidden;
//     position: fixed;
//     animation-name: move;
//     animation-duration: $animationDuration;
//     animation-timing-function: linear;
//     animation-iteration-count: infinite;
//     $colors: (#a0bcf3, #b5b0ef, #ffffff);
//     @for $i from 1 through $amount {
//       &:nth-child(#{$i}) {
//         color: nth($colors, random(length($colors)));
//         // top: random(100) * 1%;
//         // left: random(100) * 1%;
//         top: random(50) * 1%;
//         left: random(50) * 1%;
//         animation-duration: (random($animationDuration * 10) / 10) * 1s + 10s;
//         animation-delay: random(($animationDuration + 10s) * 10) / 10 * -1s;
//         transform-origin: (random(50) - 25) * 1vw (random(50) - 25) * 1vh;
//         $blurRadius: (random() + 0.5) * $particleSize * 0.5;
//         $x: if(random() > 0.5, -1, 1);
//         box-shadow: ($particleSize * 2 * $x) 0 $blurRadius currentColor;
//       }
//     }
//   }
// }

@keyframes move {
  100% {
    transform: translate3d(0, 0, 1px) rotate(360deg);
  }
}

.background {
  .outerLayer {
    position: relative;
    z-index: 900;
  }
}
